# HOME THEATER PC

volumes:
  server_htpc_prowlarr_config:
    external: true
  server_htpc_sonarr_config:
    external: true
  server_htpc_radarr_config:
    external: true
  server_htpc_plex_config:
    external: true
  server_htpc_plex_transcode:

networks:
  traefik_proxy:
    external: true
  metrics:
    external: true
  prowlarr:

services:
  # ----------------------------------------
  # PROWLARR
  # Index management
  #
  # FLARESOLVER
  # a proxy server to bypass Cloudflare and DDoS-GUARD protection
  # ----------------------------------------
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      TZ: ${TZ}
      PUID: ${PUID}
      PGID: ${PGID}
    networks:
      - traefik_proxy
      - prowlarr
    ports:
      - ${PROWLARR_PORT}:9696
    volumes:
      - server_htpc_prowlarr_config:/config
    labels:
      # -- traefik
      traefik.enable: true
      traefik.docker.network: traefik_proxy
      traefik.http.routers.prowlarr.rule: Host(`prowlarr.${DOMAIN}`)
      traefik.http.routers.prowlarr.entrypoints: websecure
      traefik.http.routers.prowlarr.tls.certresolver: myresolver
      traefik.http.routers.prowlarr.middlewares: authentik-auth
      # -- backup
      docker-volume-backup.stop-during-backup: prowlarr-service
    restart: unless-stopped


  flaresolverr:
    # image: flaresolverr/flaresolverr:latest
    image: alexfozor/flaresolverr:pr-1300-experimental
    container_name: flaresolverr
    user: root
    environment:
      LOG_LEVEL: info
      TZ: ${TZ}
      LANG: en_GB
      CAPTCHA_SOLVER: none
      HEADLESS: true
      PROMETHEUS_ENABLED: true
    networks:
      - prowlarr
      - metrics
    ports:
      - ${PROWLARR_FLARESOLVER_PORT}:8191
      - ${PROWLARR_FLARESOLVER_PROMETHEUS_PORT}:8191
    restart: unless-stopped


  # ----------------------------------------
  # SONARR
  # TV Series Management
  # ----------------------------------------
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      TZ: ${TZ}
      PUID: ${PUID}
      PGID: ${PGID}
    networks:
      - traefik_proxy
    ports:
      - ${SONARR_PORT}:8989
    volumes:
      - server_htpc_sonarr_config:/config
      - ${MEDIA_PATH}/media/series:/tv
      - ${MEDIA_PATH}/torrents/Completed:/downloads
    labels:
      # -- traefik
      traefik.enable: true
      traefik.http.routers.sonarr.rule: Host(`sonarr.${DOMAIN}`)
      traefik.http.routers.sonarr.entrypoints: websecure
      traefik.http.routers.sonarr.tls.certresolver: myresolver
      traefik.http.routers.sonarr.middlewares: authentik-auth
      # -- backup
      docker-volume-backup.stop-during-backup: sonarr-service
    restart: unless-stopped


  # ----------------------------------------
  # RADARR
  # Movies Management
  # ----------------------------------------
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      TZ: ${TZ}
      PUID: ${PUID}
      PGID: ${PGID}
    networks:
      - traefik_proxy
    ports:
      - ${RADARR_PORT}:7878
    volumes:
      - server_htpc_radarr_config:/config
      - ${MEDIA_PATH}/media/movies:/movies
      - ${MEDIA_PATH}/torrents/Completed:/downloads
    labels:
      # -- traefik
      traefik.enable: true
      traefik.http.routers.radarr.rule: Host(`radarr.${DOMAIN}`)
      traefik.http.routers.radarr.entrypoints: websecure
      traefik.http.routers.radarr.tls.certresolver: myresolver
      traefik.http.routers.radarr.middlewares: authentik-auth
      # -- backup
      docker-volume-backup.stop-during-backup: radarr-service
    restart: unless-stopped


  # ----------------------------------------
  # PLEX
  # Robust Media Server
  # ----------------------------------------
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      TZ: ${TZ}
      PUID: ${PUID}
      PGID: ${PGID}
      VERSION: docker
      PLEX_CLAIM: ${PMSTOKEN}
    networks:
      - traefik_proxy
    ports:
      - ${PLEX_PORT}:32400/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 5354:5353/udp
    volumes:
      - server_htpc_plex_config:/config
      - server_htpc_plex_transcode:/transcode
      - ${MEDIA_PATH}/media/movies:/movies
      - ${MEDIA_PATH}/media/series:/tv
    labels:
      # -- traefik
      traefik.enable: true
      traefik.http.routers.plex.rule: Host(`plex.${DOMAIN}`)
      traefik.http.routers.plex.entrypoints: websecure
      traefik.http.routers.plex.tls.certresolver: myresolver
      traefik.http.services.plex.loadbalancer.server.port: 32400
      traefik.http.routers.plex.middlewares: authentik-auth
      # -- backup
      docker-volume-backup.stop-during-backup: plex-service
    restart: unless-stopped
