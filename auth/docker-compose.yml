# ANTHENTIK AUTH SERVICES

services:
  # ----------------------
  # POSTGRES
  # ----------------------
  authentik_postgresql:
    image: docker.io/library/postgres:16-alpine
    container_name: authentik-postgresql
    environment:
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_DB: ${PG_DB}
    networks:
      - authentik_server
    ports:
      - 5432:5432
    volumes:
      - ../docker/volumes/authentik/postgresql/data:/var/lib/postgresql/data
    labels:
      traefik.enable: true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    restart: unless-stopped

  # ----------------------
  # REDIS
  # ----------------------
  authentik_redis:
    image: docker.io/library/redis:alpine
    container_name: authentik-redis
    networks:
      - authentik_server
    ports:
      - 6379:6379
    volumes:
      - ../docker/volumes/authentik/redis/data:/data
    command: 
      - --save 60 1 
      - --loglevel warning
    labels:
      - "traefik.enable=true"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    restart: unless-stopped


  # ----------------------
  # AUTHENTIK SERVER
  # ----------------------
  authentik_server:
    image: ghcr.io/goauthentik/server:2025.2.0
    container_name: authentik-server
    environment:
      AUTHENTIK_REDIS__HOST: authentik_redis
      AUTHENTIK_POSTGRESQL__HOST: authentik_postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}

      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_ERROR_REPORTING__ENABLED: ${AUTHENTIK_ERROR_REPORTING__ENABLED}

      AUTHENTIK_EMAIL__HOST: ${AUTHENTIK_EMAIL__HOST}
      AUTHENTIK_EMAIL__PORT: ${AUTHENTIK_EMAIL__PORT}
      AUTHENTIK_EMAIL__USERNAME: ${AUTHENTIK_EMAIL__USERNAME}
      AUTHENTIK_EMAIL__PASSWORD: ${AUTHENTIK_EMAIL__PASSWORD}
      AUTHENTIK_EMAIL__USE_TLS: ${AUTHENTIK_EMAIL__USE_TLS}
      AUTHENTIK_EMAIL__USE_SSL: ${AUTHENTIK_EMAIL__USE_SSL}
      AUTHENTIK_EMAIL__TIMEOUT: ${AUTHENTIK_EMAIL__TIMEOUT}
      AUTHENTIK_EMAIL__FROM: ${AUTHENTIK_EMAIL__FROM}
    networks:
      - authentik_server
      - traefik_proxy
    ports:
      - 9000:9000
      - 9443:9443
    volumes:
      - ../docker/volumes/authentik/media:/media
      - ../docker/volumes/authentik/custom-templates:/templates
    command: server
    labels:
      traefik.enable: true
      traefik.docker.network: traefik_proxy

      traefik.http.routers.authentik.service: authentik
      traefik.http.routers.authentik.rule: Host(`auth.${DOMAIN}`)
      traefik.http.routers.authentik.entrypoints: websecure
      traefik.http.routers.authentik.tls.certresolver: myresolver
      traefik.http.services.authentik.loadbalancer.server.port: 9000

      traefik.http.routers.authentik-output.service: authentik-output
      traefik.http.routers.authentik-output.rule: HostRegexp(`{subdomain:[a-z0-9-]+}.${DOMAIN}`) && PathPrefix(`/outpost.goauthentik.io`)
      traefik.http.routers.authentik-output.entrypoints: websecure
      traefik.http.routers.authentik-output.tls.certresolver: myresolver
      traefik.http.services.authentik-output.loadbalancer.server.port: 9000
    depends_on:
      authentik_postgresql:
        condition: service_healthy
      authentik_redis:
        condition: service_healthy
    restart: unless-stopped

  # ----------------------
  # AUTHENTIK WORKER
  # ----------------------
  authentik_worker:
    image: ghcr.io/goauthentik/server:2025.2.0
    container_name: authentik-worker
    environment:
      AUTHENTIK_REDIS__HOST: authentik_redis
      AUTHENTIK_POSTGRESQL__HOST: authentik_postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}

      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_ERROR_REPORTING__ENABLED: ${AUTHENTIK_ERROR_REPORTING__ENABLED}

      AUTHENTIK_EMAIL__HOST: ${AUTHENTIK_EMAIL__HOST}
      AUTHENTIK_EMAIL__PORT: ${AUTHENTIK_EMAIL__PORT}
      AUTHENTIK_EMAIL__USERNAME: ${AUTHENTIK_EMAIL__USERNAME}
      AUTHENTIK_EMAIL__PASSWORD: ${AUTHENTIK_EMAIL__PASSWORD}
      AUTHENTIK_EMAIL__USE_TLS: ${AUTHENTIK_EMAIL__USE_TLS}
      AUTHENTIK_EMAIL__USE_SSL: ${AUTHENTIK_EMAIL__USE_SSL}
      AUTHENTIK_EMAIL__TIMEOUT: ${AUTHENTIK_EMAIL__TIMEOUT}
      AUTHENTIK_EMAIL__FROM: ${AUTHENTIK_EMAIL__FROM}
    networks:
      - authentik_server
      - socket_proxy
    volumes:
      - ../docker/volumes/authentik/media:/media
      - ../docker/volumes/authentik/certs:/certs
      - ../docker/volumes/authentik/custom-templates:/templates
    user: root
    command: worker
    depends_on:
      authentik_postgresql:
        condition: service_healthy
      authentik_redis:
        condition: service_healthy
    restart: unless-stopped


networks:
  authentik_server:
  traefik_proxy:
    external: true
  socket_proxy:
    external: true