# DOCKER UTILS

volumes:
  server_docker_portainer_data:
    external: true

networks:
  socket_proxy:
    external: true
  traefik_proxy:
    external: true

services:
  # ----------------------------------------
  # SOCKET-PROXY
  # security-enhanced proxy which allows you to apply access rules to the Docker socket
  # ----------------------------------------
  socket-proxy:
    image: lscr.io/linuxserver/socket-proxy:latest
    container_name: socket-proxy
    user: root
    environment:
      - LOG_LEVEL=info
      - EVENTS=1
      - PING=1
      - VERSION=1
      
      - INFO=1 # Portainer
      - IMAGES=1 # Portainer, backup
      - NETWORKS=1 # Portainer
      - VOLUMES=1 # Portainer, backup
      - CONTAINERS=1 # Traefik, portainer, backup, etc.

      - ALLOW_START=1 # Portainer, backup
      - ALLOW_STOP=1 # Portainer, backup
      - ALLOW_RESTARTS=1 # Portainer
      - SERVICES=1 # Portainer
      - TASKS=1 # Portainer, backup
      - EXEC=1 # backup
      - POST=1 # backup, Watchtower
      - NODES=1 # backup
    
      - AUTH=0
      - SECRETS=0
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - DISTRIBUTION=0
      - PLUGINS=0
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - DISABLE_IPV6=0
    networks:
      - socket_proxy
    ports:
      - ${SOCKET_PROXY_PORT}:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    tmpfs:
      - /run
    read_only: true
    security_opt:
        - no-new-privileges:true
    restart: unless-stopped


  # ----------------------------------------
  # PORTAINER
  # Container management
  # ----------------------------------------
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    user: ${PUID}:${PGID}
    environment:
      TZ: ${TZ}
    networks:
      - traefik_proxy
      - socket_proxy
    ports:
      - ${PORTAINER_PORT}:9000
    volumes:
      - server_docker_portainer_data:/data
    command: -H tcp://socket-proxy:${SOCKET_PROXY_PORT}
    security_opt:
      - no-new-privileges:true
    labels:
      # -- traefik
      traefik.enable: true
      traefik.docker.network: traefik_proxy
      traefik.http.routers.portainer.rule: Host(`portainer.${DOMAIN}`)
      traefik.http.services.portainer.loadbalancer.server.port: 9000
      traefik.http.routers.portainer.entrypoints: websecure
      traefik.http.routers.portainer.tls.certresolver: myresolver
      traefik.http.routers.portainer.middlewares: authentik-auth
      # -- backup
      docker-volume-backup.stop-during-backup: portainer-service
    restart: unless-stopped
